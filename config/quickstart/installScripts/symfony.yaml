parameters:
  app.installScripts.symfony:
    # always remove the temp directory so that e.g. retries after a network failure don't barf
    - command:
        - rm
        - '-rf'
        - '/tmp/scaffold'
      inContainer: true
    # install either the CLI flex skeleton or the website skeleton
    # See https://symfony.com/doc/current/setup.html
    # Don't install packages though, only do that afterwards
    - command:
        - composer
        - create-project
        - symfony/skeleton
        - '/tmp/scaffold'
        - '--no-install'
      inContainer: true
      if: '#symfony.type# == ''cli'''
    - command:
        - composer
        - create-project
        - symfony/website-skeleton
        - '/tmp/scaffold'
        - '--no-install'
      inContainer: true
      if: '#symfony.type# == ''web'''
    # Move the content to the target directory
    - command:
        - mv
        - '/tmp/scaffold/*'
        - '#os.workDirectory#'
      inContainer: true
      inShell: true
    # Set the composer project name. TODO: Ask for the namespace... need to find a way that works for php, nodejs and java
    - command:
        - composer
        - config
        - name
        - 'example/#project.name#'
      inContainer: true
    - command:
        - composer
        - config
        - extra.symfony.allow-contrib
        - 'true'
      inContainer: true
    - command:
        - composer
        - config
        - bin-dir
        - '#php.composer.binDir#'
      inContainer: true
      if: '#php.composer.binDir# !== ''bin'''
    - command:
        - composer
        - config
        - vendor-dir
        - '#php.composer.vendorDir#'
      inContainer: true
      if: '#php.composer.vendorDir# !== ''vendor'''
    # Now, install the packages
    - command:
        - composer
        - install
      inContainer: true
    # And now, install the packs
    - command:
        - composer
        - require
        - '§symfony.modules§'
      inContainer: true
    # Install nodejs packages, if we are running with the webpack bundle
    - command:
        - supervisorctl
        - stop
        - nodejs
      inContainer: true
      ignoreErrors: true
      containerUser: root
      if: 'in_array(''symfony/webpack-encore-bundle'', #symfony.modules#)'
    - command:
        - npm
        - install
      inContainer: true
      if: 'in_array(''symfony/webpack-encore-bundle'', #symfony.modules#)'
    - command:
        - supervisorctl
        - start
        - nodejs
      inContainer: true
      containerUser: root
      if: 'in_array(''symfony/webpack-encore-bundle'', #symfony.modules#)'
    # Clean up package-generated docker-compose files
    - command:
        - rm
        - '-f'
        - docker-compose.yml
        - docker-compose.override.yml
    # configure the database and mailer transport
    - command:
        - sed
        - '-i'
        - 's;^DATABASE_URL.*;DATABASE_URL=mysql://root:@mariadb:3306/#project.name#;'
        - .env
      inContainer: true
      if: 'in_array(''mariadb'', #externalServices.types#)'
    - command:
        - sed
        - '-i'
        - 's;^# MAILER_DSN.*$;MAILER_DSN=smtp://mail:1025;'
        - .env
      inContainer: true
      if: 'in_array(''mariadb'', #externalServices.types#)'
